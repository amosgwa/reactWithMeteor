{"version":3,"sources":["meteor://ðŸ’»app/client/template.main.js","meteor://ðŸ’»app/client/main.jsx","meteor://ðŸ’»app/imports/api/tasks.js","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/Task.jsx"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,uF;;;;;;;;;;;ACNA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,MAAT,QAAuB,WAAvB;;AAEA,OAAO,GAAP,MAAgB,uBAAhB;;AAEA,OAAO,OAAP,CAAe,YAAM;AACpB,QAAO,oBAAC,GAAD,OAAP,EAAe,SAAS,cAAT,CAAwB,eAAxB,CAAf;AACA,CAFD,sF;;;;;;;;;;;ACNA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAd,uC;;;;;;;;;;;;;;ACFP,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,eAAT,QAAgC,0BAAhC;;AAEA,SAAS,KAAT,QAAsB,iBAAtB;;AAEA,OAAO,IAAP,MAAiB,YAAjB;;IAEM,G;;;;;;;;;eACL,Y;wBAAa,K,EAAO;AACnB,SAAM,cAAN;;AAEA,OAAM,OAAO,SAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,CAAgD,IAAhD,EAAb;;AAEA,SAAM,MAAN,CAAa;AACZ,cADY;AAEZ,eAAW,IAAI,IAAJ;AAFC,IAAb;;AAKA,YAAS,WAAT,CAAqB,KAAK,IAAL,CAAU,SAA/B,EAA0C,KAA1C,GAAkD,EAAlD;AACA;;;;;eAED,W;yBAAc;AACb,UAAO,KAAK,KAAL,CAAW,KAAX,CAAiB,GAAjB,CAAqB,UAAC,IAAD;AAAA,WAC3B,oBAAC,IAAD,IAAM,KAAK,KAAK,GAAhB,EAAqB,MAAM,IAA3B,GAD2B;AAAA,IAArB,CAAP;AAGA;;;;;eAED,M;oBAAS;AACR,UACC;AAAA;AAAA,MAAK,WAAU,WAAf;AACC;AAAA;AAAA;AACC;AAAA;AAAA;AAAA;AAAA,MADD;AAEE;AAAA;AAAA,QAAM,WAAU,UAAhB,EAA2B,UAAU,KAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB,CAArC;AACM;AACE,aAAK,MADP;AAEE,YAAI,WAFN;AAGE,oBAAY;AAHd;AADN;AAFF,KADD;AAYC;AAAA;AAAA;AACE,UAAK,WAAL;AADF;AAZD,IADD;AAkBA;;;;;;EAvCgB,S;;AA0ClB,IAAI,SAAJ,GAAgB;AACf,QAAO,UAAU,KAAV,CAAgB;AADR,CAAhB;;AAIA,eAAe,gBAAgB,YAAM;AACpC,QAAO;AACN,SAAQ,MAAM,IAAN,CAAW,EAAX,EAAe,KAAf;AADF,EAAP;AAGA,CAJc,EAIZ,GAJY,CAAf,iF;;;;;;;;;;;;;;ACtDA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,SAA3B,QAA4C,OAA5C;;IAEqB,I;;;;;;;;;gBACpB,M;oBAAS;AACR,UACC;AAAA;AAAA;AAAK,SAAK,KAAL,CAAW,IAAX,CAAgB;AAArB,IADD;AAGA;;;;;;EALgC,S;;eAAb,I;;;AAQrB,KAAK,SAAL,GAAiB;AAChB,OAAM,UAAU,MAAV,CAAiB;AADP,CAAjB,uF","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n\trender(<App/>, document.getElementById('render-target'));\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Tasks = new Mongo.Collection('tasks');","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom'\nimport { createContainer } from 'meteor/react-meteor-data';\n\nimport { Tasks } from '../api/tasks.js';\n\nimport Task from './Task.jsx';\n\nclass App extends Component {\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\n\t\tconst text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n\n\t\tTasks.insert({\n\t\t\ttext,\n\t\t\tcreatedAt: new Date()\n\t\t});\n\n\t\tReactDOM.findDOMNode(this.refs.textInput).value = '';\n\t}\n\n\trenderTasks() {\n\t\treturn this.props.tasks.map((task) => (\n\t\t\t<Task key={task._id} task={task} />\n\t\t));\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<header>\n\t\t\t\t\t<h1> Todo List </h1>\n\t\t\t\t\t <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n            <input\n              type=\"text\"\n              ref=\"textInput\"\n              placeholder=\"Type to add new tasks\"\n            />\n          </form>\n\t\t\t\t</header>\n\n\t\t\t\t<ul>\n\t\t\t\t\t{this.renderTasks()}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nApp.PropTypes = {\n\ttasks: PropTypes.array.isRequired,\n}\n\nexport default createContainer(() => {\n\treturn {\n\t\ttasks : Tasks.find({}).fetch(),\n\t};\n}, App);","import React, { Component, PropTypes } from 'react';\n\nexport default class Task extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<li>{this.props.task.text}</li>\n\t\t);\n\t}\n}\n\nTask.PropTypes = {\n\ttask: PropTypes.object.isRequired\n}"]}